# render.yaml en la raíz de tu repositorio (DEBUG=True TEMPORALMENTE y con Diagnósticos)
services:
  - type: web # Servicio para tu backend Django
    name: mi-plataforma-backend # Nombre de tu servicio backend
    env: python
    buildCommand: |
      echo "--- Iniciando Build Command ---"
      echo "Directorio actual: $(pwd)"
      ls -la
      echo "Cambiando a frontend/"
      cd frontend
      echo "Directorio frontend: $(pwd)"
      ls -la
      echo "Instalando dependencias de Node.js..."
      npm install --legacy-peer-deps
      echo "Compilando aplicación React..."
      npm run build
      echo "Volviendo al directorio raíz..."
      cd ../
      echo "Directorio raíz: $(pwd)"
      ls -la
      
      echo "--- DIAGNÓSTICO: CONTENIDO DE frontend/build ---"
      ls -la /app/frontend/build # Listar contenido de la carpeta build de React
      echo "--- DIAGNÓSTICO: CONTENIDO DE index.html EN BUILD ---"
      cat /app/frontend/build/index.html # Mostrar contenido de index.html
      echo "--- DIAGNÓSTICO: CONTENIDO DE frontend/build/static ---"
      ls -la /app/frontend/build/static # Listar contenido de la carpeta static dentro de build
      echo "--- FIN DIAGNÓSTICO DE BUILD ---"
      
      echo "Instalando dependencias de Python..."
      pip install -r requirements.txt
      echo "Recolectando archivos estáticos..."
      python manage.py collectstatic --noinput
      
      echo "--- DIAGNÓSTICO: CONTENIDO DE STATIC_ROOT (/app/staticfiles) ---"
      ls -la /app/staticfiles # Listar contenido de la carpeta STATIC_ROOT
      echo "--- DIAGNÓSTICO: CONTENIDO DE index.html EN STATIC_ROOT ---"
      cat /app/staticfiles/index.html # Intentar mostrar contenido de index.html en STATIC_ROOT
      echo "--- FIN DIAGNÓSTICO DE STATIC_ROOT ---"
      
      echo "Ejecutando migraciones de base de datos..."
      python manage.py migrate
      echo "--- Build Command Finalizado ---"
    startCommand: gunicorn core.wsgi:application --bind 0.0.0.0:$PORT
    healthCheckPath: /admin/login/
    plan: free
    autoDeploy: true
    envVars:
      - key: DATABASE_URL
        fromDatabase: mi-plataforma-cursos-db
      - key: SECRET_KEY
        generateValue: true
      - key: WEB_CONCURRENCY
        value: 4
      - key: DEBUG_VALUE
        value: "True" # <-- DEBE ESTAR EN "True" PARA VER EL TRACEBACK
      - key: ALLOWED_HOSTS
        value: "${RENDER_EXTERNAL_HOSTNAME}"

  - type: postgres
    name: mi-plataforma-cursos-db
    plan: free
    databaseName: micursodb
    user: miusuario
